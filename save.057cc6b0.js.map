{"version":3,"sources":["src/edit.js","src/close.js","src/bindTaskEvents.js","src/checked.js","src/unfinish.js","src/app.js","modules/save.js"],"names":["editTask","editButton","listItem","parentNode","label","querySelector","input","containsClass","classList","contains","innerText","value","className","img","Image","src","require","innerHTML","toggle","deleteTask","ul","removeChild","bindTaskEvents","checkboxEvent","checkbox","deleteButton","onclick","finishedTasks","document","getElementById","finishTask","appendChild","unfinishTask","unfinishedTasks","addButton","inputTask","createNewElement","task","load","createElement","type","del","save","unfinishedTasksArr","finishedTasksArr","i","children","length","push","getElementsByTagName","localStorage","removeItem","setItem","JSON","stringify"],"mappings":";;;;;;AKCA,IAAIkC,SAAS,GAAGN,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAhB;ACCA,ADAA,AHDA,ACAA,AFAA,ADAA,AIAA,ICCIM,SAAS,GAAGP,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAhB;AACA,IAAII,eAAe,GAAGL,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAtB;ACAA,ADCA,AHFA,ACAA,ACAA,ICEIF,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAApB;;ACAA,ADEe,AFHf,AFCA,ADDe,AIAf,SCGwBO,AJFfjB,ADDenB,QAAT,ECCf,CDDmC,ECCb,GIEP,CAA0BqC,IAA1B,EAAgCC,IAAhC,EAAsC;AACjD,AJFA,ADDA,MKGIpC,AJFAA,ADDAD,QKGQ,AJFA,EDDE,CKGC2B,AJFA,EDDE,GCCGzB,CDDpB,EKGuB,CAACoC,MJFxB,OIEe,CAAuB,IAAvB,CAAf;ACFJ,ADGI,AHJW,ADEX,ADDA,MKGIf,AJFAJ,ADDAlB,ECCE,CCFcoB,EDEXpB,GIEG,ALHA,GKGG0B,ALHA,ECCE,CAACzB,EDDEA,CEDT,CAAwBD,CGIZ,CAACqC,IJFxB,ECFW,AFCX,EED6ChB,KGI9B,CAAuB,OHJ3B,CGII,CAAf,AHJ4D;AAC5D,ADEAH,ADDA,ECCAA,EAAE,CAACC,CCFCG,AFCApB,KAAK,GEDG,AFCAF,ECCZ,CCFeA,ADEAA,KDDK,CAACG,EEDE,ADEvB,CCFwBA,UFCZ,CAAuB,EEDpB,CAAuB,IFC1B,CAAZ,YEDe,CAAf;AGKA,AHJA,ACDJ,AFII,ADFA,AIDJ,IDDIsB,ACCAM,ECIIK,AHJArC,AFCAK,IKGJ,CLHS,CKGA,ELHGJ,EEDE,CCDD,EDCIA,AEAF,CDDC0B,EHEI,AIDFA,CJCGvB,IEDI,CAACA,ACDF,CAACwB,CCCC,CAACA,KJCf,CAAuB,IEDlB,CAAuB,CCDxB,CAAwB,CCCtB,CAAwB,SFAzB,AFCL,CEDZ,AFCA,IGFgB,CAApB,GCCsB,CAAtB;ACKQL,AHJJ,ADGH,ADDG,IKEIA,EHJAC,AFEAlB,MKEQ,CAACK,KHJG,CFEC,EEFEV,CGIf,ALFgBA,GKEG,IHJI,CAACG,AFEA,CAACG,SKEzB,ALFgB,CAAmBC,EEFpB,CAAuB,KFEtB,CAA4B,SEF7B,CAAnB,AFEoB,CAApB;AMTJ,ADYQe,AHHJA,ACFW,ACCA,EFCXA,EITAS,ADYIT,KFLgBM,ACCAE,CFCZ,CAACN,CGGG,CAACT,KHHb,CITe,AHOJ,EDEQM,AEDR,CEROK,ADYd,AFL6B,ECCE,CCIV,KCZC,CAACC,GJS3B,WITkB,CAAwB,kBAAxB,CAAtB,ODYQ;ACXR,ADYK,AHHD5B,ACFA,AHGA,AIFA,EFCAA,CGAA,CCTA0B,EHOIzB,AHGAK,AIFAL,GCIG,GHHG,CAACwB,CCFC,ACCA,GERC,AHOE,ACCA,EJEf,CMVgBE,AJShB,CFCmB,CGHCzB,ACCAA,CFCCH,KITG,CAAC6B,GHOzB,ACCA,IFCA,OITgB,CAAwB,gBAAxB,CAApB;ADaQL,AHHJC,ACFA,AHGIrB,AIFJ,EFCAqB,EGGID,ALFApB,EGHAoB,ACCAA,GJEK,CAACd,EKEE,CAACE,CHHD,ACFA,ACCA,CFCCc,ECFExB,ACCAA,EJEX,GKEA,AHHJ,AFCsBI,GKEC,AHHAa,ACFA,ACCA,CDDCd,ACCAA,CJEG,CAACM,KAAxB,MEDJ,ACFe,ACCA,CCIX,AFLkC,ACCA,iBDDvB,ACCA,CDDf,ACCA;AEHW,ADQPa,AHHP,ACFGA,AHGIvB,AIDJuB,EDFAA,ACEAA,ECGIA,ALFAvB,KMNgByC,CHGZ,ACEA,CDFC9B,ACEAA,CCGG,CCRD,ADQEK,CLFC,CAACL,CMNY,IHG3B,ACEA,ECGI,CFLe,ACEC,CJChB,CKEqB,ELFE,WGH3B,AHGI,AIDJ,CJDmB,CAGf,8CKCA;ACPJ,ADQC,AFLDY,ACEAA,EDFAA,ACEAA,IELImB,IHGI,ACEA,CDFC1B,ACEAA,SDFT,ACEA,GDFoB,ACEA,CELE,GAAG,EAAzB,yCHGA,cCEA;AEJA,AHIAU,AHEI,AIAJM,EDFAN,ACEAM,IENIW,ENMI/B,GAAG,GAAG,CGFD,CAACkB,CCEC,CJAGjB,AIAFiB,IENI,CNMN,EMNS,ANMnB,EMNJ,AHIA,CAA0B7B,CCE1B,CAA4BA,MDF5B,ECEA;ACGA,AFJA,AHEIW,AIAJ,IJAIA,EKEAT,CLFG,CAACW,GKEC,ALFL,GKEQa,ALFEZ,OAAO,CKED,ALFE,CKEDuB,QFJNrC,ACEAA,KCEH,CAAuB,EFJnC,AHEqB,AIArB,CJAI,CGFqB8B,ACEAF,GCEb,CAAZ,YDFA,CDFA;AGHA,ADQA1B,AFJA,AHEIH,AICJ,ECCAG,ELFIH,GMNC,ADQA,CAACgB,GCRG4B,CAAC,ENMI,CMND,ANME5B,CMNf,CDQA,CCRgB4B,CAAC,CDQCR,ECREJ,EDQpB,ALFI,GAAuB,UMNQ,CAACa,INMIjC,GAAG,CMNvB,ANMwBE,CMNCgC,ENMlB,GAAqB,CMNhD,EAAqDF,CAAC,CNMlD,CMNJ,EAA0D;AACtDF,ADSJ,AFLH,AHEO,AICP,IEPOA,EDSArC,KAAK,GAAGsB,QCTU,ADSF,CCTGoB,ADSFT,ICTjB,CAAwBN,QDShB,CAAuB,MCTQ,CAACa,ADShC,CAAZ,OCT4B,CAAyBD,CAAzB,EAA4BI,oBAA5B,CAAiD,OAAjD,EAA0D,CAA1D,EAA6DvC,SAArF;AACH,ADSDJ,ALHC,EKGDA,CLXA,IKWK,CAACkC,CLHC,GKGP,GAAY,MAAZ;AAEA,ALJIlC,IAAAA,EKIAL,GLJK,CAACU,KAAN,CKIU,ELJIP,CKIDwB,ILJM,CAAClB,GKIC,CAAC6B,KLJtB,QKIa,CAAuB,QAAvB,CAAjB;ACTA,ADUAtC,ALJIA,EKIJA,ELJIA,GMNC,IAAI4C,CDUC,CCVA,ADUCjC,CLJG,CAACA,CMNF,CAAb,EAAgBiC,EAAC,CDUjB,ECVoBlB,ANMhB,CKIiB,ELJM,SKI3B,CCViC,CAACmB,ANM9B,CAFG,CAGH,MMPgB,CAAuBC,MAA3C,EAAmDF,EAAC,EAApD,EAAwD;AACpDD,ADUJ,ICVIA,EDUA/B,GAAG,GAAG,IAAIC,ICVM,CAACkC,ADUX,EAAV,ECVI,CAAsBrB,aAAa,CAACmB,QAAd,CAAuBD,EAAvB,EAA0BI,oBAA1B,CAA+C,OAA/C,EAAwD,CAAxD,EAA2DvC,SAAjF;AACH,ADUDG,ALJI,EKIJA,GAAG,CAACE,ELJIF,CKIR,GAAUG,ALJC,GAAG,IKIG,ALJCF,CKIA,ILJJ,EAAV,WKIa,CAAjB;AACAb,EAAAA,UAAU,CAAC8B,WAAX,CAAuBlB,GAAvB;ACTAqC,ADWA,ALNIrC,EMLJqC,ENKIrC,EKMAY,ELNG,CAACV,GAAJ,EMLQ,CAACoC,ANKCnC,GKME,GAAGY,CLNE,CAAC,EMLtB,CAAwB,GDWG,CAACW,ECX5B,WDWmB,ALNE,CKMqB,ALNtC,QKMe,CAAnB;ACVAW,ADWAzB,ALNIxB,EMLJiD,ADWAzB,ELNIxB,UMLQ,ADWA,ALNE,CMLDmD,ADWAxC,ALNEK,OMLf,CAAqB,CDWrB,ALNI,GKMmB,ALNI,EML3B,EAA6BoC,IAAI,CAACC,IDWlC,CAzBiD,CA0BjD,ALPwCzC,GMLX,CAAe,ANKD,CAACE,GAAjB,GAAqB,KAA5C;AMJAkB,ANKH,IMLGA,eAAe,EAAEU,kBADuB;AAExChB,ADWJ,ICXIA,EDWAc,GAAG,GAAG,IAAI3B,CCXG,EAAE8B,EDWT,EAAV;ACb4C,ADc5CH,ALPAvC,EKOAuC,ALPAvC,CMP6B,CAA7B,CDcG,CAACa,GAAJ,CLPQ,CAACP,CKOCQ,OAAO,CAAC,ALPlB,CAAmBE,MAAnB,CAA0B,UAA1B,IKOiB,CAAjB;ACVH,ADWGO,ALPH,EMFD,ADSIA,YAAY,CAACM,WAAb,CAAyBU,GAAzB,EA7BiD,CA+BjD;ACVJ,ADWI;ACVJ,ADWI;ACRJ;AAEA,ADQIvC,EAAAA,QAAQ,CAAC6B,WAAT,CAAqBP,QAArB;ACPJ,ADQItB,EAAAA,QAAQ,CAAC6B,WAAT,CAAqB3B,KAArB;ACPJ,ADQIF,EAAAA,QAAQ,CAAC6B,WAAT,CAAqBzB,KAArB;ACPJ,ADQIJ,EAAAA,QAAQ,CAAC6B,WAAT,CAAqB9B,UAArB;ACPJ,ADQIC,EAAAA,QAAQ,CAAC6B,WAAT,CAAqBN,YAArB;ACNJ,ADQI,SAAOvB,QAAP;ACPJ,ADQC;ACPD;AACA;AACA","file":"save.057cc6b0.js","sourceRoot":"..","sourcesContent":["\r\nimport save from '../modules/save'\r\n\r\nexport default function editTask() {\r\n    let editButton = this\r\n    let listItem = this.parentNode\r\n    let label = listItem.querySelector('label')\r\n    let input = listItem.querySelector('input[type=text]')\r\n\r\n    let containsClass = listItem.classList.contains('editMode')\r\n\r\n    if (containsClass) {\r\n        label.innerText = input.value\r\n        editButton.className = 'edit icon'\r\n        // editButton.innerHTML = '<span class=\"material-icons\">edit</span>'\r\n        let img = new Image()\r\n        img.src = require('../images/p.png')\r\n        editButton.innerHTML = '<img src=\"'+img.src+'\"/>'\r\n        save()\r\n    } else {\r\n        input.value = label.innerText\r\n        editButton.className = 'save icon'\r\n        // editButton.innerText = '<span class=\"material-icons\">save</span>'\r\n        let img = new Image()\r\n        img.src = require('../images/save.png')\r\n        editButton.innerHTML = '<img src=\"'+img.src+'\"/>'\r\n    }\r\n    listItem.classList.toggle('editMode')\r\n}\r\n \r\n","\r\nimport save from '../modules/save'\r\n\r\nexport default \r\nfunction deleteTask() {\r\n    let listItem = this.parentNode\r\n    let ul = listItem.parentNode\r\n    ul.removeChild(listItem)\r\n\r\n    save()\r\n}\r\n\r\n","\r\nimport editTask from './edit'\r\nimport deleteTask from './close'\r\n\r\nexport default function bindTaskEvents(listItem, checkboxEvent) {\r\n    let checkbox = listItem.querySelector('button.checkbox')\r\n    let editButton = listItem.querySelector('button.edit')\r\n    let deleteButton = listItem.querySelector('button.delete')\r\n\r\n    checkbox.onclick = checkboxEvent\r\n    editButton.onclick = editTask\r\n    deleteButton.onclick = deleteTask\r\n}","\r\nimport unfinishTask from './unfinish'\r\nimport bindTaskEvents from './bindTaskEvents'\r\nimport save from '../modules/save'\r\n\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\n\r\nexport default function finishTask() {\r\n    let listItem = this.parentNode\r\n    let checkbox = listItem.querySelector('button.checkbox')\r\n    checkbox.className='checkbox icon'\r\n    checkbox.innerHTML ='<span class=\"material-icons\">check_box</span>'\r\n    \r\n    finishedTasks.appendChild(listItem)\r\n    bindTaskEvents(listItem, unfinishTask)\r\n    save()\r\n}\r\n","\r\nimport finishTask from './checked'\r\nimport bindTaskEvents from './bindTaskEvents'\r\nimport save from '../modules/save'\r\n\r\n\r\nlet unfinishedTasks = document.getElementById('incomplete-tasks')\r\n\r\nexport default function unfinishTask() {\r\n    let listItem = this.parentNode\r\n    let checkbox = listItem.querySelector('button.checkbox')\r\n\r\n    checkbox.className ='checkbox icon'\r\n    checkbox.innerHTML ='<span class=\"material-icons\">check_box_outline_blank</span>'\r\n\r\n    unfinishedTasks.appendChild(listItem)\r\n    bindTaskEvents(listItem, finishTask)\r\n\r\n    save()\r\n}\r\n","\r\nlet addButton = document.getElementById('add')\r\nlet inputTask = document.getElementById('new-task')\r\nlet unfinishedTasks = document.getElementById('incomplete-tasks')\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\n\r\nexport default function createNewElement(task, load) {\r\n    let listItem = document.createElement('li')\r\n    let checkbox = document.createElement('button')\r\n\r\n    if (load){\r\n        checkbox.className='checkbox icon'\r\n        checkbox.innerHTML = '<span class=\"material-icons\">check_box</span>'\r\n    } else {\r\n        checkbox.className='checkbox icon'\r\n        checkbox.innerHTML = '<span class=\"material-icons\">check_box_outline_blank</span>'\r\n    }\r\n\r\n    let label = document.createElement('label')\r\n    label.innerHTML = task\r\n    \r\n    let input = document.createElement('input')\r\n    input.type =\"text\"\r\n    \r\n    let editButton = document.createElement('button')\r\n    editButton.className='edit icon'\r\n    let img = new Image()\r\n    img.src = require('../images/p.png')\r\n    editButton.appendChild(img)\r\n\r\n    let deleteButton = document.createElement('button')\r\n    deleteButton.className='delete icon'\r\n    // deleteButton.innerHTML ='<span class=\"material-icons\">delete</span>'\r\n    let del = new Image()\r\n    del.src = require('../images/basket.png')\r\n    deleteButton.appendChild(del)\r\n\r\n    // let img = new Image()\r\n    // img.src = require('../images/p.png')\r\n    // deleteButton.innerHTML = '<img src=\"'+img.src+'\"/>'\r\n\r\n    listItem.appendChild(checkbox)\r\n    listItem.appendChild(label)\r\n    listItem.appendChild(input)\r\n    listItem.appendChild(editButton)\r\n    listItem.appendChild(deleteButton)\r\n\r\n    return listItem\r\n}\r\n","let unfinishedTasks = document.getElementById('incomplete-tasks')\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\nimport bindTaskEvents from '../src/bindTaskEvents'\r\nimport unfinishTask from '../src/unfinish'\r\nimport finishTask from '../src/checked' \r\nimport createNewElement from '../src/app'\r\n\r\nexport default function save() {\r\n    let unfinishedTasksArr = []\r\n    let finishedTasksArr = []\r\n\r\n    for (let i = 0; i < unfinishedTasks.children.length; i++) {\r\n        unfinishedTasksArr.push(unfinishedTasks.children[i].getElementsByTagName('label')[0].innerText)\r\n    }\r\n\r\n    for (let i = 0; i < finishedTasks.children.length; i++) {\r\n        finishedTasksArr.push(finishedTasks.children[i].getElementsByTagName('label')[0].innerText)\r\n    }\r\n\r\n    localStorage.removeItem('todo');\r\n    localStorage.setItem('todo', JSON.stringify({\r\n        unfinishedTasks: unfinishedTasksArr,\r\n        finishedTasks: finishedTasksArr\r\n    }))\r\n}\r\n\r\n// function load() {\r\n//     return JSON.parse(localStorage.getItem('todo'))\r\n// }\r\n\r\n\r\n// let data = load();\r\n\r\n// for(let i = 0; i < data.unfinishedTasks.length; i++) {\r\n//     let listItem = createNewElement(data.unfinishedTasks[i], false)\r\n//     unfinishedTasks.appendChild(listItem)\r\n//     bindTaskEvents(listItem, finishTask)\r\n// }\r\n\r\n// for(let i = 0; i < data.finishedTasks.length; i++) {\r\n//     let listItem = createNewElement(data.finishedTasks[i], true)\r\n//     finishedTasks.appendChild(listItem)\r\n//     bindTaskEvents(listItem, unfinishTask)\r\n// }\r\n\r\n"]}