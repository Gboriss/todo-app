{"version":3,"sources":["src/checked.js","src/unfinish.js","src/app.js","modules/save.js","src/edit.js","src/close.js","src/bindTaskEvents.js","src/add.js"],"names":["finishedTasks","document","getElementById","finishTask","listItem","parentNode","checkbox","querySelector","className","innerHTML","appendChild","unfinishTask","unfinishedTasks","addButton","inputTask","createNewElement","task","load","createElement","label","input","type","editButton","img","Image","src","require","deleteButton","del","save","unfinishedTasksArr","finishedTasksArr","i","children","length","push","getElementsByTagName","innerText","localStorage","removeItem","setItem","JSON","stringify","editTask","containsClass","classList","contains","value","toggle","deleteTask","removeChild","bindTaskEvents","checkboxEvent","onclick","addTask","parse","getItem","addEventListener","e","keyCode","console","log","data"],"mappings":"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","file":"add.3e105726.js","sourceRoot":"..","sourcesContent":["\r\nimport unfinishTask from './unfinish'\r\nimport bindTaskEvents from './bindTaskEvents'\r\nimport save from '../modules/save'\r\n\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\n\r\nexport default function finishTask() {\r\n    let listItem = this.parentNode\r\n    let checkbox = listItem.querySelector('button.checkbox')\r\n    checkbox.className='checkbox icon'\r\n    checkbox.innerHTML ='<span class=\"material-icons\">check_box</span>'\r\n    \r\n    finishedTasks.appendChild(listItem)\r\n    bindTaskEvents(listItem, unfinishTask)\r\n    save()\r\n}\r\n","\r\nimport finishTask from './checked'\r\nimport bindTaskEvents from './bindTaskEvents'\r\nimport save from '../modules/save'\r\n\r\n\r\nlet unfinishedTasks = document.getElementById('incomplete-tasks')\r\n\r\nexport default function unfinishTask() {\r\n    let listItem = this.parentNode\r\n    let checkbox = listItem.querySelector('button.checkbox')\r\n\r\n    checkbox.className ='checkbox icon'\r\n    checkbox.innerHTML ='<span class=\"material-icons\">check_box_outline_blank</span>'\r\n\r\n    unfinishedTasks.appendChild(listItem)\r\n    bindTaskEvents(listItem, finishTask)\r\n\r\n    save()\r\n}\r\n","\r\nlet addButton = document.getElementById('add')\r\nlet inputTask = document.getElementById('new-task')\r\nlet unfinishedTasks = document.getElementById('incomplete-tasks')\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\n\r\nexport default function createNewElement(task, load) {\r\n    let listItem = document.createElement('li')\r\n    let checkbox = document.createElement('button')\r\n\r\n    if (load){\r\n        checkbox.className='checkbox icon'\r\n        checkbox.innerHTML = '<span class=\"material-icons\">check_box</span>'\r\n    } else {\r\n        checkbox.className='checkbox icon'\r\n        checkbox.innerHTML = '<span class=\"material-icons\">check_box_outline_blank</span>'\r\n    }\r\n\r\n    let label = document.createElement('label')\r\n    label.innerHTML = task\r\n    \r\n    let input = document.createElement('input')\r\n    input.type =\"text\"\r\n    \r\n    let editButton = document.createElement('button')\r\n    editButton.className='edit icon'\r\n    let img = new Image()\r\n    img.src = require('../images/p.png')\r\n    editButton.appendChild(img)\r\n\r\n    let deleteButton = document.createElement('button')\r\n    deleteButton.className='delete icon'\r\n    // deleteButton.innerHTML ='<span class=\"material-icons\">delete</span>'\r\n    let del = new Image()\r\n    del.src = require('../images/basket.png')\r\n    deleteButton.appendChild(del)\r\n\r\n    // let img = new Image()\r\n    // img.src = require('../images/p.png')\r\n    // deleteButton.innerHTML = '<img src=\"'+img.src+'\"/>'\r\n\r\n    listItem.appendChild(checkbox)\r\n    listItem.appendChild(label)\r\n    listItem.appendChild(input)\r\n    listItem.appendChild(editButton)\r\n    listItem.appendChild(deleteButton)\r\n\r\n    return listItem\r\n}\r\n","let unfinishedTasks = document.getElementById('incomplete-tasks')\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\nimport bindTaskEvents from '../src/bindTaskEvents'\r\nimport unfinishTask from '../src/unfinish'\r\nimport finishTask from '../src/checked' \r\nimport createNewElement from '../src/app'\r\n\r\nexport default function save() {\r\n    let unfinishedTasksArr = []\r\n    let finishedTasksArr = []\r\n\r\n    for (let i = 0; i < unfinishedTasks.children.length; i++) {\r\n        unfinishedTasksArr.push(unfinishedTasks.children[i].getElementsByTagName('label')[0].innerText)\r\n    }\r\n\r\n    for (let i = 0; i < finishedTasks.children.length; i++) {\r\n        finishedTasksArr.push(finishedTasks.children[i].getElementsByTagName('label')[0].innerText)\r\n    }\r\n\r\n    localStorage.removeItem('todo');\r\n    localStorage.setItem('todo', JSON.stringify({\r\n        unfinishedTasks: unfinishedTasksArr,\r\n        finishedTasks: finishedTasksArr\r\n    }))\r\n}\r\n\r\n// function load() {\r\n//     return JSON.parse(localStorage.getItem('todo'))\r\n// }\r\n\r\n\r\n// let data = load();\r\n\r\n// for(let i = 0; i < data.unfinishedTasks.length; i++) {\r\n//     let listItem = createNewElement(data.unfinishedTasks[i], false)\r\n//     unfinishedTasks.appendChild(listItem)\r\n//     bindTaskEvents(listItem, finishTask)\r\n// }\r\n\r\n// for(let i = 0; i < data.finishedTasks.length; i++) {\r\n//     let listItem = createNewElement(data.finishedTasks[i], true)\r\n//     finishedTasks.appendChild(listItem)\r\n//     bindTaskEvents(listItem, unfinishTask)\r\n// }\r\n\r\n","\r\nimport save from '../modules/save'\r\n\r\nexport default function editTask() {\r\n    let editButton = this\r\n    let listItem = this.parentNode\r\n    let label = listItem.querySelector('label')\r\n    let input = listItem.querySelector('input[type=text]')\r\n\r\n    let containsClass = listItem.classList.contains('editMode')\r\n\r\n    if (containsClass) {\r\n        label.innerText = input.value\r\n        editButton.className = 'edit icon'\r\n        // editButton.innerHTML = '<span class=\"material-icons\">edit</span>'\r\n        let img = new Image()\r\n        img.src = require('../images/p.png')\r\n        editButton.innerHTML = '<img src=\"'+img.src+'\"/>'\r\n        save()\r\n    } else {\r\n        input.value = label.innerText\r\n        editButton.className = 'save icon'\r\n        // editButton.innerText = '<span class=\"material-icons\">save</span>'\r\n        let img = new Image()\r\n        img.src = require('../images/save.png')\r\n        editButton.innerHTML = '<img src=\"'+img.src+'\"/>'\r\n    }\r\n    listItem.classList.toggle('editMode')\r\n}\r\n \r\n","\r\nimport save from '../modules/save'\r\n\r\nexport default \r\nfunction deleteTask() {\r\n    let listItem = this.parentNode\r\n    let ul = listItem.parentNode\r\n    ul.removeChild(listItem)\r\n\r\n    save()\r\n}\r\n\r\n","\r\nimport editTask from './edit'\r\nimport deleteTask from './close'\r\n\r\nexport default function bindTaskEvents(listItem, checkboxEvent) {\r\n    let checkbox = listItem.querySelector('button.checkbox')\r\n    let editButton = listItem.querySelector('button.edit')\r\n    let deleteButton = listItem.querySelector('button.delete')\r\n\r\n    checkbox.onclick = checkboxEvent\r\n    editButton.onclick = editTask\r\n    deleteButton.onclick = deleteTask\r\n}","\r\nlet addButton = document.getElementById('add')\r\nlet inputTask = document.getElementById('new-task')\r\nlet unfinishedTasks = document.getElementById('incomplete-tasks')\r\nimport bindTaskEvents from './bindTaskEvents'\r\nimport createNewElement from './app'\r\nimport finishTask from './checked'\r\nimport save from '../modules/save'\r\nlet finishedTasks = document.getElementById('finished-tasks')\r\n\r\nimport unfinishTask from '../src/unfinish'\r\n\r\nexport default function addTask() {\r\n    if (inputTask.value) {\r\n        let listItem = createNewElement(inputTask.value, false)\r\n        unfinishedTasks.appendChild(listItem)\r\n        bindTaskEvents(listItem, finishTask)\r\n        inputTask.value = ''\r\n    }\r\n    save()\r\n}\r\n\r\ndocument.querySelector('input').addEventListener('keydown', function(e) {\r\n    if (e.keyCode === 13) {\r\n        console.log(e.keyCode)\r\n        if (inputTask.value) {\r\n            let listItem = createNewElement(inputTask.value, false)\r\n            unfinishedTasks.appendChild(listItem)\r\n            bindTaskEvents(listItem, finishTask)\r\n            inputTask.value = ''\r\n        }\r\n        save()\r\n    }\r\n})\r\n\r\naddButton.onclick = addTask\r\n\r\nfunction load() {\r\n    return JSON.parse(localStorage.getItem('todo'))\r\n}\r\n\r\n\r\nlet data = load();\r\n\r\nfor(let i = 0; i < data.unfinishedTasks.length; i++) {\r\n    let listItem = createNewElement(data.unfinishedTasks[i], false)\r\n    unfinishedTasks.appendChild(listItem)\r\n    bindTaskEvents(listItem, finishTask)\r\n}\r\n\r\nfor(let i = 0; i < data.finishedTasks.length; i++) {\r\n    let listItem = createNewElement(data.finishedTasks[i], true)\r\n    finishedTasks.appendChild(listItem)\r\n    bindTaskEvents(listItem, unfinishTask)\r\n}\r\n"]}